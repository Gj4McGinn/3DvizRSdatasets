% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/3Dplotting.R
\name{brick2movie}
\alias{brick2movie}
\title{Render a rasterStack into 3D rgl png images and animiations}
\usage{
brick2movie(
  brick = br,
  eleRast = globalDEM0.5deg,
  eleRastOnly4NA = TRUE,
  renderOcean = FALSE,
  renderSphere = FALSE,
  useRayShade4Sphere = FALSE,
  renderFakeSphere = FALSE,
  sphereExtFac = 0.2,
  renderCountries = FALSE,
  minVal = NULL,
  maxVal = NULL,
  nudgeMin2ZeroElev = F,
  maxFac = 1,
  gaussianSmoothSigma = 0,
  zscaleRatio = 40,
  col4NA = "white",
  elevat4NA = 0,
  oceanCol = "paleturquoise",
  nSubSteps = 1,
  rewindLoop = F,
  loop = 0,
  append1st = TRUE,
  outPrefix = "Animation",
  outFolder = tempdir(),
  framerate = 8,
  titles = NULL,
  justReRenderVideo = FALSE,
  renderVideo = TRUE,
  renderLegend = TRUE,
  leg.tit = expression(g ~ C ~ ~m^{     -2 } ~ day^{     -1 }),
  caption = "",
  resume = FALSE,
  nRounds = 1,
  thetaStartEnd = c(0, 0),
  phiStartEnd = c(0, 0) + 45 * !renderSphere,
  cntStart = 0,
  over = NULL,
  useOnlyOver = FALSE,
  over2 = NULL,
  pal = palette(),
  ...
)
}
\arguments{
\item{brick}{The rasterStack or brick to be visualized. Default: br brick in this package}

\item{eleRast}{The raster to be used for elevation. Default: globalDEM0.5deg in this package}

\item{eleRastOnly4NA}{Should the elevation raster only be used in case of NA in the \code{brick}? Default: TRUE}

\item{renderOcean}{Should the ocean be rendered (with a blue transparent)? Default: FALSE}

\item{renderSphere}{Should the data set be rendered as a sphere? Default: FALSE}

\item{useRayShade4Sphere}{Should the rayshader flat image (e.g. including shadows) be used as texture for the spherical viz? Default: TRUE}

\item{renderFakeSphere}{Should the rayshader flat image just wrapped around the sphere without elevation effects. Not recommended. Default: FALSE}

\item{sphereExtFac}{Indicates how pronouned the elevation should be. 0 = no elevation effect, 1 = range of elevations is radius of the sphere. Default: 0.2}

\item{renderCountries}{Should the country borders be rendered? Default: FALSE}

\item{minVal}{Set manually the minimum value in the brick for color and elevation scaling. If not set, will be derived from data, but it seems brick need to be in memory then!}

\item{maxVal}{Set manually the maximum value in the brick for color and elevation scaling. If not set, will be derived from data, but it seems brick need to be in memory then!}

\item{nudgeMin2ZeroElev}{If TRUE, the minimum elevation from the data will be set to zero (= Ocean level). Default= FALSE}

\item{maxFac}{Can be used to reduce the maximum to stretch color scale and elevation (e.g. if derived from range of data). Default: 1.0}

\item{gaussianSmoothSigma}{If >0, applies a spatial Gaussian smoothing with sigma. Default: 0}

\item{zscaleRatio}{The elevetation range to pixel size will be this ratio. Default: 40 (i.e. height is 40 times the pixel size)}

\item{col4NA}{COlor used for NA. Default: "white"}

\item{elevat4NA}{The elevation to be the used if NA. Default: 0}

\item{oceanCol}{COlor of the ocean. Default: "paleturquoise"}

\item{nSubSteps}{Substeps (Interpolation in time) per layer (to make animation smoother). 1 means no interpolation. Default: 2}

\item{rewindLoop}{Should, for the animation, the sequence by reversed (forth and back). Default: FALSE}

\item{loop}{How many loops should be rendered in the animation. Default: 0}

\item{append1st}{Should the first layer be appended? Helpful to make a smooth seasonal cycle. Default: TRUE}

\item{outPrefix}{Name of the subfolder and prefix of output file name. Default: "Animation"}

\item{outFolder}{Folder where results are written. Default: tempdir()}

\item{framerate}{Video framerate. Default: 8}

\item{titles}{Vector of title of length number of layers: Default: NULL}

\item{justReRenderVideo}{Should just the video be (re-)rendered (e.g. with different framerate; then pngs must be there already). Default: FALSE}

\item{renderVideo}{Should a video be rendered? Default: TRUE}

\item{renderLegend}{Should a color legend be rendered= Default: TRUE}

\item{leg.tit}{Title of the legend, intended to contain the unit Default: \code{expression(g~C~~m^{-2}~day^{-1})}}

\item{caption}{Caption of pngs and video. Default: ""}

\item{resume}{Should the process just be resumed (then files in folder will not be overwritten, but rather continued). Default: FALSE}

\item{nRounds}{One round is going once through all layers. Several rounds makes sense if combined with varying view angles. Default: 1}

\item{thetaStartEnd}{Start and end view horizontal angle. Default: C(0,0)}

\item{phiStartEnd}{Start and end vertical angle: Default: \code{c(0, 0) + 45*!renderSphere}}

\item{cntStart}{Can change where the file number counting starts. Default: 0}

\item{over}{An overlay to be plotted. Can be an filepath to an image, or SpatialPolygonDataFrame from wihch an overlay image is generated with \code{rayshader::generate_line_overlay}. Default: NULL}

\item{useOnlyOver}{If TRUE only the overlay is used in the spherical rendering and br data ignored. Otherwise the texture is "somehow" combined with the plotcolor in \code{shade3d}. Default: FALSE}

\item{over2}{Can be another overlay image. Default: NULL}

\item{pal}{The palette to be used. Vector of colors. Default: \code{palette()}}

\item{...}{parameters passed on to other functions}
}
\value{
Returns an array of generated files (so that can used in pipe with \code{renderVideos})
}
\description{
Takes a rasterstack or a path to a NetCDF file and generates 3D vizualisations from the data,
offering a couple of options (e.g. flat or spherical viz; interpolation between layers).
The values can be either represented as colors \strong{and} height, or the height can be
specified by a separate (static) raster.
}
\examples{
## Create pngs for animation of maps on a sphere
## Open an rgl window with defined size first
rgl::open3d(windowRect = 50 + c(0,0,1920,1080))

## Just a single frame br[[6]] for brevity (br is a brick with 12 layers)
## Simple sphere without elevation model and ocean
brick2movie(br[[6]], eleRast = NULL, gaussianSmoothSigma = 1, renderVideo = F, renderSphere=T, pal=rev(pal_MR$divViriMagma))

## Sphere with elevation model and ocean
brick2movie(br[[6]], eleRast = globalDEM0.5deg, gaussianSmoothSigma = 1, renderVideo = F, renderSphere=T, renderOcean=T, pal=rev(pal_MR$divViriMagma))

## Same but now a flat projection
brick2movie(br[[6]], eleRast = globalDEM0.5deg, gaussianSmoothSigma = 1, renderVideo = F, renderSphere=F, renderOcean=T, pal=rev(pal_MR$divViriMagma))

## Now an animation with interpolation and 10 rounds and include country borders
## This creates 480 frames ==> takes a bit of time
brick2movie(br, eleRast = globalDEM0.5deg, gaussianSmoothSigma = 1, renderVideo = T, renderSphere=T, renderOcean=T, pal=rev(pal_MR$divViriMagma), renderCountries = T, thetaStartEnd = c(0,360), nSubSteps = 4, nRounds = 10)

## The same but flat ==> just change rendersphere to 'F'
brick2movie(br, eleRast = globalDEM0.5deg, gaussianSmoothSigma = 1, renderVideo = T, renderSphere=F, renderOcean=T, pal=rev(pal_MR$divViriMagma), renderCountries = T, thetaStartEnd = c(0,360), nSubSteps = 4, nRounds = 10)

## Also works for regions
africa  <- crop(br, extent(-23.906250,55.458984, -37.889187,39.364140) )
## Flat
brick2movie(africa[[6]], eleRast = globalDEM0.5deg, gaussianSmoothSigma = 1, renderVideo = F, renderSphere=F, renderOcean = T, renderCountries = T, pal=rev(pal_MR$divViriMagma))

## Sphere
brick2movie(africa[[6]] \%>\% raster::disaggregate(2), eleRast = globalDEM0.5deg, gaussianSmoothSigma = 1, renderVideo = F, renderSphere=T, renderOcean = T, renderCountries = T, pal=rev(pal_MR$divViriMagma))

## Or with projections
prj <- projGlobal$Robinson
brick2movie(br[[6]] \%>\% aggregate(2) \%>\% terra::rast()  \%>\% terra::project(prj, mask=T) \%>\% raster(), eleRast = globalDEM0.5deg, gaussianSmoothSigma = 1, renderVideo = F, renderSphere=F, renderOcean = T, renderCountries = T, pal=rev(pal_MR$divViriMagma), phiStartEnd = c(50,50), elevat4NA = NA, title=paste("June GPP", prj ))
}
